{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/post-status-filter/index.js","components/post-status-filter/post-status-filter.js","components/post-list-item/index.js","components/post-list-item/post-list-item.js","components/post-list/index.js","components/post-list/post-list.js","components/post-add-form/index.js","components/post-add-form/post-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","liked","allPosts","className","SearchPanel","props","state","term","onUpdateSearch","bind","e","target","value","this","setState","type","placeholder","onChange","Component","PostStatusFilter","buttons","name","label","map","filter","onFilterSelect","clazz","onClick","PostListItem","onDelete","onToggleImportant","onToggleLiked","classNames","important","like","PostList","posts","elements","item","id","itemProps","ListGroup","PostAddForm","text","onValueChange","onSubmit","preventDefault","onAdd","App","data","deleteItem","addItem","maxId","index","findIndex","elem","slice","body","newItem","old","items","length","indexOf","visiblePosts","filterPost","searchPost","ReactDOM","render","document","getElementById"],"mappings":"kZACeA,ECEG,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACvB,OACI,sBAAKC,UAAU,oBAAf,UACI,+CACA,+BAAKD,EAAL,oJAA6CD,SCN1CG,G,wDCIX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,KAAM,IAGV,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBANP,E,kDAUnB,SAAeC,GACX,IAAMH,EAAOG,EAAEC,OAAOC,MACtBC,KAAKC,SAAS,CAACP,SACfM,KAAKR,MAAMG,eAAeD,K,oBAG9B,WACI,OACI,uBACIJ,UAAU,4BACVY,KAAK,OACLC,YAAY,yFACZC,SAAUJ,KAAKL,qB,GAvBUU,cCH1BC,G,wDCIX,WAAYd,GAAQ,IAAD,8BACf,cAAMA,IACDe,QAAU,CACX,CAACC,KAAM,MAAOC,MAAO,sBACrB,CAACD,KAAM,OAAQC,MAAO,uEAJX,E,0CAOnB,WAAU,IAAD,OACCF,EAAUP,KAAKO,QAAQG,KAAI,YAAoB,IAAlBF,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MAAW,EACf,EAAKjB,MAA/BmB,EADyC,EACzCA,OAAQC,EADiC,EACjCA,eAETC,EADSF,IAAWH,EACH,WAAa,wBACpC,OACI,wBAEIN,KAAK,SACLZ,UAAS,cAASuB,GAClBC,QAAS,kBAAMF,EAAeJ,IAJlC,SAKEC,GAJOD,MAOjB,OACI,qBAAKlB,UAAU,YAAf,SACKiB,Q,GAxB6BF,c,QCH/BU,G,kKCKX,WAAW,IAAD,EAEuEf,KAAKR,MAA3EiB,EAFD,EAECA,MAAOO,EAFR,EAEQA,SAAUC,EAFlB,EAEkBA,kBAAmBC,EAFrC,EAEqCA,cACvCC,EAAa,+CAUjB,OAbM,EAEoDC,YAItDD,GAAa,cANX,EAE+DE,OAQjEF,GAAa,SAIb,sBAAK7B,UAAW6B,EAAhB,UACI,sBACA7B,UAAU,sBACVwB,QAASI,EAFT,SAGKT,IAEL,sBAAKnB,UAAU,mDAAf,UACI,wBACAY,KAAK,SACLZ,UAAU,kBACVwB,QAASG,EAHT,SAII,mBAAG3B,UAAU,iBAEjB,wBACAY,KAAK,SACLZ,UAAU,mBACVwB,QAASE,EAHT,SAII,mBAAG1B,UAAU,oBAEjB,mBAAGA,UAAU,0B,GAnCSe,c,QCH3BiB,G,MCKE,SAAC,GAAyD,IAAxDC,EAAuD,EAAvDA,MAAOP,EAAgD,EAAhDA,SAAUC,EAAsC,EAAtCA,kBAAmBC,EAAmB,EAAnBA,cAE7CM,EAAWD,EAAMb,KAAI,SAACe,GAAU,IAC3BC,EAAoBD,EAApBC,GAAOC,EADmB,YACNF,EADM,QAEjC,OACI,oBAAanC,UAAU,kBAAvB,SACI,cAAC,EAAD,2BACIqC,GADJ,IAEAX,SAAU,kBAAMA,EAASU,IACzBT,kBAAmB,kBAAMA,EAAkBS,IAC3CR,cAAe,kBAAMA,EAAcQ,QAL9BA,MAWjB,OACI,cAACE,EAAA,EAAD,CAAWtC,UAAU,WAArB,SACKkC,MCvBEK,G,wDCKX,WAAYrC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTqC,KAAM,IAEV,EAAKC,cAAgB,EAAKA,cAAcnC,KAAnB,gBACrB,EAAKoC,SAAW,EAAKA,SAASpC,KAAd,gBAND,E,iDASnB,SAAcC,GACVG,KAAKC,SAAS,CACV6B,KAAMjC,EAAEC,OAAOC,U,sBAIvB,SAASF,GACLA,EAAEoC,iBACFjC,KAAKR,MAAM0C,MAAMlC,KAAKP,MAAMqC,MAE5B9B,KAAKC,SAAS,CACV6B,KAAM,O,oBAId,WACI,OACI,uBACAxC,UAAU,sBACV0C,SAAUhC,KAAKgC,SAFf,UAGI,uBACI9B,KAAK,OACLC,YAAY,0HACZb,UAAU,8BACVc,SAAUJ,KAAK+B,cACfhC,MAAOC,KAAKP,MAAMqC,OAEtB,wBAAQ5B,KAAK,SACTZ,UAAU,4BADd,qE,GArCyBe,cCH1B8B,G,wDCSX,WAAY3C,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACT2C,KAAM,CACF,CAAC3B,MAAO,gEAAoBW,WAAW,EAAMC,MAAM,EAAOK,GAAI,GAC9D,CAACjB,MAAO,+HAA4BW,WAAW,EAAOC,MAAM,EAAOK,GAAI,GACvE,CAACjB,MAAO,6DAAiBW,WAAW,EAAOC,MAAM,EAAOK,GAAI,IAGhEhC,KAAM,GAENiB,OAAQ,OAEZ,EAAK0B,WAAa,EAAKA,WAAWzC,KAAhB,gBAClB,EAAK0C,QAAU,EAAKA,QAAQ1C,KAAb,gBACf,EAAKqB,kBAAoB,EAAKA,kBAAkBrB,KAAvB,gBACzB,EAAKsB,cAAgB,EAAKA,cAActB,KAAnB,gBACrB,EAAKD,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKgB,eAAiB,EAAKA,eAAehB,KAApB,gBAEtB,EAAK2C,MAAQ,EApBE,E,8CAuBnB,SAAWb,GACP1B,KAAKC,UAAS,YAAa,IAAXmC,EAAU,EAAVA,KACNI,EAAQJ,EAAKK,WAAU,SAAAC,GAAI,OAAIA,EAAKhB,KAAOA,KAIjD,MAAO,CACHU,KAHQ,sBAAOA,EAAKO,MAAM,EAAGH,IAArB,YAAgCJ,EAAKO,MAAMH,EAAQ,W,qBAQvE,SAAQI,GACJ,IAAMC,EAAU,CACZpC,MAAOmC,EACPxB,WAAW,EACXM,GAAI1B,KAAKuC,SAGbvC,KAAKC,UAAS,YAAa,IAAXmC,EAAU,EAAVA,KAEZ,MAAO,CACHA,KAFQ,sBAAOA,GAAP,CAAaS,U,+BAOjC,SAAkBnB,GACd1B,KAAKC,UAAS,YAAa,IAAXmC,EAAU,EAAVA,KACNI,EAAQJ,EAAKK,WAAU,SAAAC,GAAI,OAAIA,EAAKhB,KAAOA,KAE3CoB,EAAMV,EAAKI,GACXK,EAAO,2BAAOC,GAAP,IAAY1B,WAAY0B,EAAI1B,YAIzC,MAAO,CACHgB,KAHQ,sBAAOA,EAAKO,MAAM,EAAGH,IAArB,CAA6BK,GAA7B,YAAyCT,EAAKO,MAAMH,EAAQ,W,2BAShF,SAAcd,GACV1B,KAAKC,UAAS,YAAa,IAAXmC,EAAU,EAAVA,KACNI,EAAQJ,EAAKK,WAAU,SAAAC,GAAI,OAAIA,EAAKhB,KAAOA,KAE3CoB,EAAMV,EAAKI,GACXK,EAAO,2BAAOC,GAAP,IAAYzB,MAAOyB,EAAIzB,OAIpC,MAAO,CACHe,KAHQ,sBAAOA,EAAKO,MAAM,EAAGH,IAArB,CAA6BK,GAA7B,YAAyCT,EAAKO,MAAMH,EAAQ,W,wBAWhF,SAAWO,EAAOrD,GAEd,OAAoB,IAAhBA,EAAKsD,OACED,EAGJA,EAAMpC,QAAQ,SAACc,GAClB,OAAOA,EAAKhB,MAAMwC,QAAQvD,IAAS,O,wBAK3C,SAAWqD,EAAOpC,GACd,MAAe,SAAXA,EACOoC,EAAMpC,QAAO,SAAAc,GAAI,OAAIA,EAAKJ,QAE1B0B,I,4BAKf,SAAerD,GACXM,KAAKC,SAAS,CAACP,W,4BAGnB,SAAeiB,GACXX,KAAKC,SAAS,CAACU,a,oBAGnB,WAAW,IAAD,EAEuBX,KAAKP,MAA3B2C,EAFD,EAECA,KAAM1C,EAFP,EAEOA,KAAMiB,EAFb,EAEaA,OAEbvB,EAAQgD,EAAKzB,QAAO,SAAAc,GAAI,OAAIA,EAAKJ,QAAM2B,OACvC3D,EAAW+C,EAAKY,OAEhBE,EAAelD,KAAKmD,WAAWnD,KAAKoD,WAAWhB,EAAM1C,GAAOiB,GAElE,OACI,sBAAKrB,UAAU,MAAf,UACI,cAAC,EAAD,CACAF,MAAOA,EACPC,SAAUA,IAGV,sBAAKC,UAAU,sBAAf,UACI,cAAC,EAAD,CACAK,eAAgBK,KAAKL,iBACrB,cAAC,EAAD,CACAgB,OAAQA,EACRC,eAAgBZ,KAAKY,oBAEzB,cAAC,EAAD,CACCW,MAAO2B,EACPlC,SAAWhB,KAAKqC,WAChBpB,kBAAmBjB,KAAKiB,kBACxBC,cAAelB,KAAKkB,gBACrB,cAAC,EAAD,CAAagB,MAAOlC,KAAKsC,iB,GA9IRjC,cCJjCgD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.44d48d72.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\nexport default AppHeader;","import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({liked, allPosts}) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>Andrew Baluev</h1>\r\n            <h2>{allPosts} записей, из них понравилось: {liked}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import SearchPanel from './search-panel';\r\nexport default SearchPanel;","import React, { Component } from 'react';\r\n\r\nimport './search-panel.css'\r\n\r\nexport default class SearchPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            term: \"\"\r\n        }\r\n        // обработчик события\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n    }\r\n\r\n    // Функция следит за тем, что вводит пользователь и изменяет стейт\r\n    onUpdateSearch(e) {\r\n        const term = e.target.value;\r\n        this.setState({term});\r\n        this.props.onUpdateSearch(term);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <input\r\n                className=\"form-control search-input\"\r\n                type=\"text\"\r\n                placeholder=\"Поиск по записям\"\r\n                onChange={this.onUpdateSearch}\r\n            />\r\n        )\r\n    }\r\n}","import PostStatusFilter from './post-status-filter';\r\nexport default PostStatusFilter;","import React, { Component } from 'react';\r\n\r\nimport './post-status-filter.css'\r\n\r\nexport default class PostStatusFilter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.buttons = [\r\n            {name: 'all', label: 'Все'},\r\n            {name: 'like', label: 'Понравилось'}\r\n        ]\r\n    }\r\n    render() {\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const {filter, onFilterSelect} = this.props;\r\n            const active = filter === name;\r\n            const clazz = active ? 'btn-info' : 'btn-outline-secondary'\r\n            return (\r\n                <button \r\n                    key={name} \r\n                    type=\"button\" \r\n                    className={`btn ${clazz}`}\r\n                    onClick={() => onFilterSelect(name)}\r\n                >{label}</button>\r\n            )       \r\n        })\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}","import PostListItem from './post-list-item';\r\nexport default PostListItem;","import React, { Component } from 'react';\r\n\r\nimport './post-list-item.css';\r\n\r\nexport default class PostListItem extends Component {\r\n\r\n    render () {\r\n\r\n        const {label, onDelete, onToggleImportant, onToggleLiked, important, like} = this.props;        \r\n        let classNames = 'app-list-item d-flex justify-content-between';\r\n\r\n        if (important) {\r\n            classNames +=' important';\r\n        }\r\n\r\n        if (like) {\r\n            classNames +=' like';\r\n        }\r\n\r\n        return(\r\n            <div className={classNames}>\r\n                <span \r\n                className=\"app-list-item-label\"\r\n                onClick={onToggleLiked}>\r\n                    {label}\r\n                </span>\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <button \r\n                    type=\"button\" \r\n                    className=\"btn-star btn-sm\"\r\n                    onClick={onToggleImportant}>\r\n                        <i className=\"fa fa-star\"></i>\r\n                    </button>\r\n                    <button \r\n                    type=\"button\" \r\n                    className=\"btn-trash btn-sm\"\r\n                    onClick={onDelete}>\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                    </button>\r\n                    <i className=\"fa fa-heart\"></i>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import PostList from './post-list';\r\nexport default PostList;","import React from 'react';\r\nimport PostListItem from '../post-list-item';\r\nimport { ListGroup } from 'reactstrap';\r\n\r\nimport './post-list.css'\r\n\r\nconst PostList = ({posts, onDelete, onToggleImportant, onToggleLiked}) => {\r\n\r\n    const elements = posts.map((item) => {\r\n        const {id, ...itemProps} = item;\r\n        return (\r\n            <li key={id} className=\"list-group-item\">\r\n                <PostListItem \r\n                {...itemProps}\r\n                onDelete={() => onDelete(id)}\r\n                onToggleImportant={() => onToggleImportant(id)}\r\n                onToggleLiked={() => onToggleLiked(id)}\r\n                 />           \r\n            </li>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <ListGroup className=\"app-list\">\r\n            {elements}\r\n        </ListGroup> \r\n    )\r\n}\r\n\r\nexport default PostList;","import PostAddForm from './post-add-form';\r\nexport default PostAddForm;","import React from 'react';\r\nimport { Component } from 'react';\r\n \r\nimport './post-add-form.css'\r\n\r\nexport default class PostAddForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: \"\"\r\n        }\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onValueChange(e) {\r\n        this.setState({\r\n            text: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        this.props.onAdd(this.state.text)\r\n        // Очищаем инпут при отправке формы\r\n        this.setState({\r\n            text: ''\r\n        });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <form \r\n            className=\"bottom-panel d-flex\"\r\n            onSubmit={this.onSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"О чем Вы думаете сейчас?\"\r\n                    className=\"form-control new-post-label\"\r\n                    onChange={this.onValueChange}\r\n                    value={this.state.text}\r\n                />\r\n                <button type=\"submit\"\r\n                    className=\"btn btn-outline-secondary\">\r\n                    Добавить</button>\r\n            </form>\r\n        )\r\n    }\r\n}","import App from './app'\r\n\r\nexport default App;","import React, {Component} from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport PostStatusFilter from '../post-status-filter';\r\nimport PostList from '../post-list';\r\nimport PostAddForm from '../post-add-form';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [\r\n                {label: \"Буду учить React\", important: true, like: false, id: 1},\r\n                {label: \"Повторю эту тему еще раз\", important: false, like: false, id: 2},\r\n                {label: \"А это я знаю!\", important: false, like: false, id: 3}\r\n            ],\r\n            // стейт для того чтобы проходиться по постам и найти нужный\r\n            term: \"\",\r\n            // состояние говорит о том как фильтровать посты\r\n            filter: \"all\"\r\n        };\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.onToggleImportant = this.onToggleImportant.bind(this);\r\n        this.onToggleLiked = this.onToggleLiked.bind(this);\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n        this.onFilterSelect = this.onFilterSelect.bind(this);\r\n\r\n        this.maxId = 4;\r\n    }\r\n\r\n    deleteItem(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const newArr = [...data.slice(0, index), ...data.slice(index + 1)];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    addItem(body) {\r\n        const newItem = {\r\n            label: body,\r\n            important: false,\r\n            id: this.maxId++\r\n        }\r\n\r\n        this.setState(({data}) => {\r\n            const newArr = [...data, newItem];\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    onToggleImportant(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = {...old, important: !old.important};\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    onToggleLiked(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = {...old, like: !old.like};\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    // Функция поиска постов, возвращает массив с постами\r\n    // items - посты\r\n    // terms - то что вводит пользователь\r\n    searchPost(items, term) {\r\n        // в строке поиска ничего нет\r\n        if (term.length === 0) {\r\n            return items\r\n        }\r\n        // если что-то ввёл, то возвращает те посты \"лейбл\" где есть то, что ввел пользователь\r\n        return items.filter( (item) => {\r\n            return item.label.indexOf(term) > -1;\r\n        });\r\n    }\r\n\r\n    // функция фильтр постов\r\n    filterPost(items, filter) {\r\n        if (filter === 'like') {\r\n            return items.filter(item => item.like)\r\n        } else {\r\n            return items\r\n        }\r\n    }\r\n\r\n    // функция, которая обновляет стейт\r\n    onUpdateSearch(term) {\r\n        this.setState({term}) \r\n    }\r\n\r\n    onFilterSelect(filter) {\r\n        this.setState({filter}) \r\n    }\r\n\r\n    render () {\r\n\r\n        const {data, term, filter} = this.state;\r\n\r\n        const liked = data.filter(item => item.like).length;\r\n        const allPosts = data.length;\r\n\r\n        const visiblePosts = this.filterPost(this.searchPost(data, term), filter);\r\n\r\n        return (\r\n            <div className=\"app\">\r\n                <AppHeader\r\n                liked={liked}\r\n                allPosts={allPosts}\r\n                />\r\n                \r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel\r\n                    onUpdateSearch={this.onUpdateSearch}/>\r\n                    <PostStatusFilter\r\n                    filter={filter}\r\n                    onFilterSelect={this.onFilterSelect}/>\r\n                </div>\r\n                <PostList\r\n                 posts={visiblePosts}\r\n                 onDelete={ this.deleteItem }\r\n                 onToggleImportant={this.onToggleImportant}\r\n                 onToggleLiked={this.onToggleLiked}/>\r\n                <PostAddForm onAdd={this.addItem}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './index.css';\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}